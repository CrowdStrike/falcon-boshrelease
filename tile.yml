---
# The high-level description of your tile.
# Replace these properties with real values.
#
name: crowdstrike-falcon-cf
icon_file: resources/crowdstrike-logo.png
label: CrowdStrike Falcon for VMWare Tanzu
description: "Falcon is the CrowdStrike platform purpose-built to stop breaches via a unified set of cloud-delivered technologies that prevent all types of attacks â€” including malware and much more."
# metadata_version: 1.8                 # Optional, defaults to 1.8

# Global defaults (all optional)
#
# org: test-org                         # Name of org to create for your apps
# space: test-space                     # Name of space to create for your apps
apply_open_security_group: true       # Apply open security group, default: false
# standalone: false                     # Suppress default CF properties in property_blueprints metadata, default: false

properties:
- name: author
  type: string
  label: Author
  value: CrowdStrike
- name: version
  type: string
  value: 1.2.0

# Specify the packages to be included in your tile.
# The format of the section to include depends on the type
# of package you are describing. For fragments of each type
# that you can copy & paste, see:
#
# http://docs.pivotal.io/tiledev/tile-generator.html
#
packages:
- name: falcon-linux-sensor
  type: bosh-release
  label: CrowdStrike Falcon Sensor for Linux      # Package name for use in human-readable labels in OpsManager
  path: resources/falcon-boshrelease.tgz

#    buildpack: java_buildpack_offline
#   command: python app.py
#   memory: 256M

# New bosh release package with standalone job
# - name: my-bosh-release
#   type: bosh-release
#   path: resources/standalone-release.tgz
#   jobs:
#   - name: my-job
#     instances: 1
#     dynamic_ip: 1
#     type: standalone # Don't include default CF properties in generated job manifest
#     templates:
#     - name: my-job
#       release: standalone-release

# Include stemcell criteria if you don't want to accept the default.
# Since this stemcell is only used to run pre and post errands, we
# strongly recommend you leave this alone so that your tile always
# runs with the latest stemcell.
#
# stemcell_criteria:
#   os: ubuntu-trusty
#   requires_cpi: false
#   version: '3062'

# Add properties you want to pass to your applications.
# Properties specified here will not be configurable by the user.
#
# properties:
# - name: example_property
#   type: string
#   default: specify a value
#   label: Label for the field on the GUI
#   description: Longer description of the field's purpose

# Uncomment this section if you want to display forms with configurable
# properties in Ops Manager. These properties will be passed to your
# applications as environment variables. You can also refer to them
# elsewhere in this template by using:
#     (( .properties.<property-name> ))
#
# forms:
# - name: buildpack_properties
#   label: Buildpack
#   description: Buildpack_properties
#   properties:
#   - name: buildpack_rank
#     type: integer
#     default: 0
#     label: Buildpack rank for this buildpack_rank
#     description: Ranking of this buildpack relative to others
forms:
- name: oauth
  label: CrowdStrike API Credentials
  description: CrowdStrike OAuth API Credentials
  properties:
  - name: client_id
    type: string
    label: OAuth Client ID
    constraints:
    - must_match_regex: "^[a-fA-F0-9]{32}$"
      error_message: "Invalid OAuth Client ID format. Please use a valid OAuth Client ID."
  - name: client_secret
    type: secret
    label: OAuth Client Secret
    constraints:
    - must_match_regex: "^[a-zA-Z0-9]{40}$"
      error_message: "Invalid OAuth Client Secret format. Please use a valid OAuth Client Secret."
  - name: cloud
    type: string
    label: Falcon Cloud Region (e.g. us-1, us-2, eu-1, gov1). Default is autodiscover.
    optional: true
    constraints:
    - must_match_regex: "^(us-1|us-2|eu-1|gov1|)$"
      error_message: "Invalid CrowdStrike region. Please provide a valid region or remove the entry for autodiscover."

- name: falcon
  label: Falcon Sensor Settings
  description: CrowdStrike Falcon Sensor Settings
  properties:
  - name: cid
    type: string
    label: CID
    description: Falcon Customer ID (CID) with Checksum (Optional)
    optional: true
    constraints:
    - must_match_regex: "^[0-9a-fA-F]{32}-[0-9a-fA-F]{2}$"
      error_message: "Invalid CID format. Please use a valid CID with checksum."
  - name: apd
    type: string
    label: Disable Proxy
    description: Configures if the proxy should be enabled or disabled, By default, the proxy is enabled.
    optional: true
  - name: aph
    type: string
    label: Proxy host
    description: The proxy host for the sensor to use when communicating with CrowdStrike
    optional: true
  - name: app
    type: string
    label: Proxy Port
    description: The proxy port for the sensor to use when communicating with CrowdStrike
    optional: true
  - name: provisioning_token
    type: string
    label: Provisioning Token
    description: The provisioning token to use for installing the sensor
    optional: true
    constraints:
    - must_match_regex: "^[0-9a-fA-F]{8}$"
      error_message: "Invalid Provisioning Token format. Please use a valid Provisioning Token."
  - name: provisioning_wait_time
    type: string
    label: Provisioning Wait Time (Windows Only)
    description: Time to wait, in milliseconds, for sensor to provision
    optional: true
    constraints:
    - must_match_regex: "^[0-9]*$"
      error_message: "Invalid Provisioning Wait Time format. Please use a valid Provisioning Wait Time in milliseconds."
  - name: tags
    type: string
    label: Tags
    description: "Sensor grouping tags are optional, user-defined identifiers that can used to group and filter hosts. Allowed characters: all alphanumerics, '/', '-', and '_'."
    optional: true
  - name: sensor_update_policy
    type: string
    label: Sensor Update Policy
    description: Name of the sensor update policy.
    optional: true

# Add any dependencies your tile has on other installed products.
# This is often appropriate when using automatic service provisioning
# for any of your packages above, with services provided by other
# products.
#
# requires_product_versions:
# - name: p-mysql
#   version: '>= 1.7'

# Customize upgrade parameters if the defaults don't meet your needs.
#
# update:
#   canaries: 1
#   canary_watch_time: 10000-100000
#   max_in_flight: 1
#   update_watch_time: 10000-100000

# If prior versions of your tile are installed and configured, their
# property values will not be overwritten by new defaults provided
# in this file. If that is your intent, you must do the overwriting
# explicitly using JavaScript migration functions, like so:
#
# migration: |
#   properties['properties']['.properties.org']['value'] = 'system';

# Bosh add-ons can be configured by adding runtime_configs to the
# tile.yml
#
# runtime_configs:
#   - name: MY-RUNTIME-CONFIG
#     runtime_config:
#       releases:
#       - name: os-conf
#         version: 15
#       addons:
#       - name: MY-ADDON-NAME
#         jobs:
#         - name: MY-RUNTIME-CONFIG-JOB
#           release: os-conf
#         properties:
#           MY-ADDON-NAME:
#         ...
#
# Bosh releases referenced by add-ons must be either already present,
# or added to the tile separately using a package of type bosh-release.

runtime_configs:
- name: falcon-sensor-config
  runtime_config:
    releases:
    - name: falcon-sensor
      version: (( .properties.version.value ))
    addons:
    - name: falcon-linux-sensor
      jobs:
      - name: falcon-linux-sensor
        release: falcon-sensor
        properties:
          oauth:
            client_id: (( .properties.client_id.value ))
            client_secret: (( .properties.client_secret.value ))
            cloud: (( .properties.cloud.value ))
          falcon:
            cid: (( .properties.cid.value ))
            apd: (( .properties.apd.value ))
            aph: (( .properties.aph.value ))
            app: (( .properties.app.value ))
            provisioning_token: (( .properties.provisioning_token.value ))
            tags: (( .properties.tags.value ))
            sensor_update_policy: (( .properties.sensor_update_policy.value ))
          version: (( .properties.version.value ))
      include:
        stemcell:
        - os: ubuntu-jammy
        - os: ubuntu-bionic
        - os: ubuntu-xenial
        - os: ubuntu-trusty

    - name: falcon-windows-sensor
      jobs:
      - name: falcon-windows-sensor
        release: falcon-sensor
        properties:
          oauth:
            client_id: (( .properties.client_id.value ))
            client_secret: (( .properties.client_secret.value ))
            cloud: (( .properties.cloud.value ))
          falcon:
            cid: (( .properties.cid.value ))
            apd: (( .properties.apd.value ))
            aph: (( .properties.aph.value ))
            app: (( .properties.app.value ))
            provisioning_token: (( .properties.provisioning_token.value ))
            provisioning_wait_time: (( .properties.provisioning_wait_time.value ))
            tags: (( .properties.tags.value ))
            sensor_update_policy: (( .properties.sensor_update_policy.value ))
          version: (( .properties.version.value ))
      include:
        stemcell:
        - os: windows2012R2
        - os: windows2016
        - os: windows1803
        - os: windows2019
