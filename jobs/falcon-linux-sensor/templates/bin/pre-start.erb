#!/bin/bash

set -e # exit immediately if a simple command exits with a non-zero status
set -u # report the usage of uninitialized variables

exec 1>> /var/vcap/sys/log/falcon-linux-sensor/pre-start.stdout.log
exec 2>> /var/vcap/sys/log/falcon-linux-sensor/pre-start.stderr.log

if [[ ! -f /opt/CrowdStrike/falconctl ]]; then
    PROXY=""
<% if p("falcon.installer_proxy_system_bypass", nil) -%>
  <% if p("falcon.aph", nil) -%>
    PROXY="<%= p('falcon.aph') %>"
  <% end -%>
  <% if p("falcon.app", nil) -%>
    PROXY+=":<%= p('falcon.app') %>"
  <% end -%>
<% end -%>

    INSTALLER_CMD="/var/vcap/packages/falcon-linux-sensor/falcon-installer --config=/var/vcap/jobs/falcon-linux-sensor/config/config.yaml --user-agent=falcon-boshrelease/<%= p('version') %> --verbose --enable-file-logging --tmpdir /var/vcap/sys/log/falcon-linux-sensor/"
    if [ -n "$PROXY" ]; then
        https_proxy=$PROXY $INSTALLER_CMD
    else
        $INSTALLER_CMD
    fi
fi

if [[ -f /opt/CrowdStrike/falconctl ]]; then
    FALCON_ARGS=""
<% if p("falcon.cid", nil) -%>
    FALCON_ARGS+=" --cid=<%= p('falcon.cid') %>"
<% end -%>
<% if p("falcon.provisioning_token", nil) -%>
    FALCON_ARGS+=" --provisioning-token=<%= p('falcon.provisioning_token') %>"
<% end -%>
<% if p("falcon.tags", nil) -%>
    FALCON_ARGS+=" --tags=<%= p('falcon.tags') %>"
<% end -%>
<% if p("falcon.apd", nil) -%>
    FALCON_ARGS+=" --apd=<%= p('falcon.apd') %>"
<% end -%>
<% if p("falcon.aph", nil) -%>
    FALCON_ARGS+=" --apd=false"
    FALCON_ARGS+=" --aph=<%= p('falcon.aph') %>"
<% end -%>
<% if p("falcon.app", nil) -%>
    FALCON_ARGS+=" --app=<%= p('falcon.app') %>"
<% end -%>

    if [ -n "$FALCON_ARGS" ] ; then
        /opt/CrowdStrike/falconctl -s -f ${FALCON_ARGS}
    fi
fi
